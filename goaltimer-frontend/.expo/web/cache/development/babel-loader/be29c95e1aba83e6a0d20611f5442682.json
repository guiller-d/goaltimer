{"ast":null,"code":"var _jsxFileName = \"/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/SignUpScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport Screen from \"../components/Screen\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { create } from 'apisauce';\nimport api from \"../api/api\";\nimport endpoints from \"../api/endpoints\";\nimport * as yup from 'yup';\n\nfunction SignUpScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var handleSubmit = function handleSubmit(values) {\n    var apiStr;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiStr = endpoints.register;\n            api.baseURL.post(apiStr, {\n              firstName: values.first_name,\n              lastName: values.last_name,\n              email: values.email,\n              password: values.password1\n            }).then(function (response) {\n              console.log(response.data);\n              Alert.alert(\"Sign up Succesfully\", \"You can now log in\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  {}\n  var signUpValidationSchema = yup.object().shape({\n    first_name: yup.string().min(3, function (_ref2) {\n      var min = _ref2.min;\n      return \"First name must be at least \" + min + \" characters\";\n    }).required('First name is required'),\n    last_name: yup.string().min(3, function (_ref3) {\n      var min = _ref3.min;\n      return \"Last name must be at least \" + min + \" characters\";\n    }).required('Last name is required'),\n    email: yup.string().email(\"Please enter valid email\").required('Email Address is Required'),\n    password1: yup.string().min(5, function (_ref4) {\n      var min = _ref4.min;\n      return \"Password must be at least \" + min + \" characters\";\n    }).required('Password is required')\n  });\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"padding\",\n    enabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      backgroundColor: '#E7ECF4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.introLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"), React.createElement(Text, {\n    style: styles.miniInstruction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Fill in the form to create an account\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password1: '',\n      password2: ''\n    },\n    validationSchema: signUpValidationSchema,\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, function (_ref5) {\n    var handleChange = _ref5.handleChange,\n        handleBlur = _ref5.handleBlur,\n        handleSubmit = _ref5.handleSubmit,\n        values = _ref5.values,\n        errors = _ref5.errors,\n        isValid = _ref5.isValid,\n        touched = _ref5.touched;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"First name\",\n      onChangeText: handleChange('first_name'),\n      onBlur: handleBlur('first_name'),\n      value: values.first_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }), errors.first_name && touched.first_name && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 71\n      }\n    }, errors.first_name), React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Last Name\",\n      onChangeText: handleChange('last_name'),\n      onBlur: handleBlur('last_name'),\n      value: values.last_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), errors.last_name && touched.last_name && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 69\n      }\n    }, errors.last_name), React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Email\",\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }), errors.email && touched.email && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 61\n      }\n    }, errors.email), React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Password\",\n      onChangeText: handleChange('password1'),\n      onBlur: handleBlur('password1'),\n      value: values.password1,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }), errors.password1 && touched.password1 && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 69\n      }\n    }, errors.password1), React.createElement(View, {\n      style: styles.buttonContainer2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      onPress: handleSubmit,\n      title: \"Sign up\",\n      disabled: !isValid,\n      color: \"#FFFFFF\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    })));\n  }))))));\n}\n\nvar styles = StyleSheet.create({\n  buttonSection: {\n    flex: 2,\n    justifyContent: 'center',\n    padding: 20\n  },\n  buttonContainer1: {\n    margin: 20,\n    backgroundColor: '#FFFFFF',\n    color: '#775E5E',\n    padding: 20,\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50,\n    borderBottomLeftRadius: 50,\n    borderBottomRightRadius: 50,\n    borderColor: '#B8DEDB',\n    borderWidth: 1,\n    shadowColor: '#0062FF',\n    shadowRadius: 5,\n    shadowOpacity: 5,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  buttonContainer2: {\n    margin: 20,\n    backgroundColor: '#85AAE6',\n    color: '#FFFFFF',\n    padding: 12,\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50,\n    borderBottomLeftRadius: 50,\n    borderBottomRightRadius: 50,\n    borderColor: '#0062FF',\n    borderWidth: 1,\n    shadowColor: '#0062FF',\n    shadowRadius: 5,\n    shadowOpacity: 5,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  introLabel: {\n    textAlign: \"left\",\n    marginTop: 50,\n    marginBottom: 10,\n    marginLeft: 30,\n    fontSize: 30,\n    color: '#85AAE6'\n  },\n  titleLabel: {\n    textAlign: \"center\",\n    fontSize: 45,\n    color: '#85AAE6'\n  },\n  quote: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontStyle: 'italic',\n    color: '#8C9198'\n  },\n  miniInstruction: {\n    textAlign: \"left\",\n    marginLeft: 30,\n    marginBottom: 10,\n    fontSize: 15,\n    color: '#8C9198'\n  },\n  textInput: {\n    height: 50,\n    margin: 12,\n    padding: 10,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    borderColor: '#A7A7A7',\n    borderWidth: 2.5,\n    shadowColor: '#0062FF',\n    shadowRadius: 2,\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    fontSize: 15\n  },\n  errorText: {\n    marginLeft: 20,\n    fontSize: 10,\n    color: 'red'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/SignUpScreen.js"],"names":["React","ScrollView","TextInput","Screen","Formik","Form","Field","ErrorMessage","create","api","endpoints","yup","SignUpScreen","navigation","handleSubmit","values","apiStr","register","baseURL","post","firstName","first_name","lastName","last_name","email","password","password1","then","response","console","log","data","Alert","alert","text","onPress","signUpValidationSchema","object","shape","string","min","required","flex","height","backgroundColor","styles","introLabel","miniInstruction","password2","handleChange","handleBlur","errors","isValid","touched","textInput","errorText","buttonContainer2","StyleSheet","buttonSection","justifyContent","padding","buttonContainer1","margin","color","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderColor","borderWidth","shadowColor","shadowRadius","shadowOpacity","shadowOffset","width","textAlign","marginTop","marginBottom","marginLeft","fontSize","titleLabel","quote","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button, KeyboardAvoidingView, Alert} from 'react-native';\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport Screen from '../components/Screen';\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\nimport { create } from 'apisauce';\nimport api from '../api/api';\nimport endpoints from '../api/endpoints';\nimport * as yup from 'yup'\n\n\n\nfunction SignUpScreen({navigation}) {\n    // fetch('/users', {\n    //     method: 'post',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //       name: 'Hubot',\n    //       login: 'hubot',\n    //     })\n    //   }).then(status)\n    //     .then(json)\n    //     .then(function(json) {\n    //       console.log('request succeeded with json response', json)\n    //     }).catch(function(error) {\n    //       console.log('request failed', error)\n    //     })\n\n\n    const handleSubmit = async (values) => { \n        ///register/{firstName}/{lastName}/{email}/{password}\n        //let apiStr = \"/register/{\" + values.first_name + \"}/{\" + values.last_name + \"}/{\" + values.email + \"}/{\" + values.password1 + \"}\" \n        let apiStr = endpoints.register\n        api.baseURL.post(apiStr, {firstName: values.first_name, lastName: values.last_name, email: values.email, password: values.password1}).then(response => {\n            console.log(response.data);\n            Alert.alert(\n                \"Sign up Succesfully\",\n                \"You can now log in\",\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n        }\n            \n        // const api = create({ baseURL: 'http://:8080', method: \"post\",});\n        // console.log(apiStr)\n        // api.post(apiStr, {}).then(response => {\n        //     console.log(\"==============================\");\n        // console.log(response.data);}\n    \n        );\n        //console.log(values.email, values.password)\n    }\n    \n    {/* To validate */}\n    const signUpValidationSchema = yup.object().shape({\n        first_name: yup\n            .string()\n            .min(3, ({ min }) => `First name must be at least ${min} characters`)\n            .required('First name is required'),\n        last_name: yup\n            .string()\n            .min(3, ({ min }) => `Last name must be at least ${min} characters`)\n            .required('Last name is required'),\n        email: yup\n            .string()\n            .email(\"Please enter valid email\")\n            .required('Email Address is Required'),\n        password1: yup\n            .string()\n            .min(5, ({ min }) => `Password must be at least ${min} characters`)\n            .required('Password is required'),\n        // password2: yup\n        //     .string()\n        //     .min(5, ({ min }) => `Password must be at least ${min} characters`)\n        //     .required('Password is required')\n        //     .test('global-ok', 'Re-entered password does not match', (password1, password2) => password1 == password2)\n    })\n    return (\n        <KeyboardAvoidingView \n            style={{flex:1}}\n            behavior= \"padding\"\n            enabled = {true}\n        >\n        <ScrollView>\n        <Screen>\n            <View style={{ height: '100%', backgroundColor: '#E7ECF4'}}>\n                <View>\n                    {/* Section reserved for Sign up + mini instruction */}\n                    <Text style = {styles.introLabel}>Sign Up</Text>\n                    <Text style = {styles.miniInstruction}>Fill in the form to create an account</Text>\n                </View>\n\n                <View>\n                    {/* Form To Sign up*/}\n                    <Formik\n                        initialValues={{ first_name: '', last_name: '', email: '', password1: '', password2: ''}}\n                        validationSchema={signUpValidationSchema}\n                        onSubmit={values => handleSubmit(values)}\n                   >\n                    {({ handleChange, handleBlur, handleSubmit, values, errors, isValid, touched }) => (\n                    <View>\n\n                        {/* For First Name */}\n                        <TextInput\n                            style = {styles.textInput}\n                            placeholder = 'First name'\n                            onChangeText={handleChange('first_name')}\n                            onBlur={handleBlur('first_name')}\n                            value={values.first_name}\n                        />\n                        {(errors.first_name && touched.first_name) && <Text style ={styles.errorText}>{errors.first_name}</Text>}\n\n                        {/* For Last Name */}\n                        <TextInput\n                            style = {styles.textInput}\n                            placeholder = 'Last Name'\n                            onChangeText={handleChange('last_name')}\n                            onBlur={handleBlur('last_name')}\n                            value={values.last_name}\n                        />\n                        {(errors.last_name && touched.last_name) && <Text style ={styles.errorText}>{errors.last_name}</Text>}\n\n                        {/* For email */}\n                        <TextInput\n                            style = {styles.textInput}\n                            placeholder = 'Email'\n                            onChangeText={handleChange('email')}\n                            onBlur={handleBlur('email')}\n                            value={values.email}\n                            keyboardType= \"email-address\"\n                        />\n                        {(errors.email && touched.email) && <Text style ={styles.errorText}>{errors.email}</Text>}\n\n                        {/* For password */}\n                        <TextInput\n                            style = {styles.textInput}\n                            placeholder = 'Password'\n                            onChangeText={handleChange('password1')}\n                            onBlur={handleBlur('password1')}\n                            value={values.password1}\n                            secureTextEntry\n                        />\n                        {(errors.password1 && touched.password1) && <Text style ={styles.errorText}>{errors.password1}</Text>}\n\n                        {/* For password re-entry \n                        <TextInput\n                            style = {styles.textInput}\n                            placeholder = 'Re-enter Password'\n                            onChangeText={handleChange('password2')}\n                            onBlur={handleBlur('password2')}\n                            value={values.password2}\n                            secureTextEntry\n                        /> \n                        {(errors.password2 && touched.password2) && <Text style ={styles.errorText}>{errors.password2}</Text>}\n                        */}\n                        <View style = {styles.buttonContainer2}>\n                            <Button onPress={handleSubmit} title=\"Sign up\" disabled ={!isValid} color = '#FFFFFF'/>\n                        </View>\n                    </View>\n                     )}\n                    </Formik>\n                </View>    \n            </View>  \n        </Screen>\n        </ScrollView>\n        </KeyboardAvoidingView>\n    );\n}\nconst styles = StyleSheet.create({\n    buttonSection: {\n        flex: 2,\n        justifyContent: 'center',\n        padding: 20,\n    },\n    buttonContainer1: {\n        margin: 20,\n        backgroundColor: '#FFFFFF',\n        color: '#775E5E',\n        padding: 20,\n        borderTopLeftRadius: 50,\n        borderTopRightRadius: 50,\n        borderBottomLeftRadius: 50,\n        borderBottomRightRadius: 50,\n        borderColor: '#B8DEDB',\n        borderWidth: 1,\n        shadowColor: '#0062FF',\n        shadowRadius: 5,\n        shadowOpacity: 5,\n        shadowOffset:{width: 0, height: 2}\n    },\n    buttonContainer2: {\n        margin: 20,\n        backgroundColor: '#85AAE6',\n        color: '#FFFFFF',\n        padding: 12,\n        borderTopLeftRadius: 50,\n        borderTopRightRadius: 50,\n        borderBottomLeftRadius: 50,\n        borderBottomRightRadius: 50,\n        borderColor: '#0062FF',\n        borderWidth: 1,\n        shadowColor: '#0062FF',\n        shadowRadius: 5,\n        shadowOpacity: 5,\n        shadowOffset:{width: 0, height: 2}\n    },\n    introLabel: {\n        textAlign: \"left\",\n        marginTop: 50,\n        marginBottom: 10,\n        marginLeft: 30,\n        fontSize: 30,\n        color: '#85AAE6'\n    },\n    titleLabel: {\n        textAlign: \"center\",\n        fontSize: 45,\n        color: '#85AAE6'\n    },\n    quote: {\n        textAlign: \"center\",\n        fontSize: 25,\n        fontStyle: 'italic',\n        color: '#8C9198'\n    },\n    miniInstruction: {\n        textAlign: \"left\",\n        marginLeft: 30,\n        marginBottom: 10,\n        fontSize: 15,\n        color: '#8C9198'\n    },\n    textInput: {\n        height: 50,\n        margin: 12,\n        padding: 10,\n        backgroundColor: 'white',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderBottomLeftRadius: 10,\n        borderBottomRightRadius: 10,\n        borderColor: '#A7A7A7',\n        borderWidth: 2.5,\n        shadowColor: '#0062FF',\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n        shadowOffset:{width: 0, height: 3},\n        fontSize: 15\n    },\n    errorText: {\n        marginLeft: 20,\n        fontSize: 10,\n        color: 'red',\n      },\n});\n\n\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}