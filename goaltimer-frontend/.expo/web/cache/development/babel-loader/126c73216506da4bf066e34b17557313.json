{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/TaskDetailScreen.js\";\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LoadingBar from \"../components/LoadingBar\";\nimport Screen from \"../components/Screen\";\nimport WaterIntakeDetail from \"../components/WaterIntakeDetail\";\nimport waterstatistics from \"../database/waterstatistics.json\";\nimport CountDown from 'react-native-countdown-component';\nimport Button from \"../components/Button\";\nimport StartButton from \"../components/StartButton\";\n\nfunction TaskDetailScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var activityName = route.params.activityName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      timer = _useState2[0],\n      setTimer = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  var weekly_intake = [];\n  var water_count = 0;\n  var points = [];\n  var days = [];\n  var sum = 0;\n  var average = 0;\n  useEffect(function () {\n    var timer = setInterval(function () {\n      return console.log('fire!');\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    };\n  }, []);\n\n  if (waterstatistics != undefined) {\n    waterstatistics.map(function (stats, index) {\n      stats.weekly_percentage.map(function (data, key) {\n        water_count += 1;\n        weekly_intake.push({\n          id: water_count,\n          date: data.date,\n          day_percentage: data.day_percentage,\n          day: data.day,\n          oz: data.oz\n        });\n        days.push(data.date.toString().substring(0, 5));\n        points.push(data.day_percentage);\n        sum += data.day_percentage;\n      });\n    });\n  }\n\n  var startStopTimer = function startStopTimer() {\n    setTimer(!timer);\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(StartButton, {\n    title: \"Start Timer\",\n    onPress: startStopTimer,\n    isPressed: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), React.createElement(CountDown, {\n    size: 30,\n    until: 1000,\n    onFinish: function onFinish() {\n      return alert('Finished');\n    },\n    digitStyle: {\n      backgroundColor: '#FFF',\n      borderWidth: 2,\n      borderColor: '#3B97ED'\n    },\n    digitTxtStyle: {\n      color: '#1CC625'\n    },\n    timeLabelStyle: {\n      color: 'red',\n      fontWeight: 'bold'\n    },\n    separatorStyle: {\n      color: '#1CC625'\n    },\n    timeToShow: ['H', 'M', 'S'],\n    timeLabels: {\n      m: null,\n      s: null\n    },\n    showSeparator: true,\n    running: timer,\n    onChange: function onChange(time) {\n      setTime(time);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dataContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 5,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \" Time Data \"), React.createElement(Text, {\n    style: styles.text4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \" See your water intake in details \"))), weekly_intake.map(function (data, key) {\n    return React.createElement(WaterIntakeDetail, {\n      key: key,\n      date: data.date,\n      percentage: data.day_percentage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 36\n      }\n    });\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  homeContainer: {\n    height: '100%',\n    width: '100%'\n  },\n  loadingBarContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  dataContainer: {\n    marginTop: 10,\n    width: '95%',\n    backgroundColor: 'white',\n    alignSelf: 'center',\n    borderRadius: 20\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    fontFamily: 'Avenir-Medium'\n  },\n  text2: {\n    fontSize: 20,\n    color: 'white',\n    fontFamily: 'Avenir-Medium'\n  },\n  text4: {\n    fontSize: 14,\n    color: 'gray',\n    fontFamily: 'Avenir-Book'\n  },\n  exportText: {\n    fontSize: 20,\n    color: 'blue',\n    fontFamily: 'Avenir-Medium'\n  },\n  exportText1: {\n    fontSize: 14,\n    color: 'blue',\n    fontFamily: 'Avenir-Medium'\n  },\n  text5: {\n    fontSize: 20,\n    color: 'gray',\n    fontFamily: 'Avenir-Medium'\n  }\n});\nexport default TaskDetailScreen;","map":{"version":3,"sources":["/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/TaskDetailScreen.js"],"names":["React","useEffect","useState","useRef","useContext","ScrollView","LoadingBar","Screen","WaterIntakeDetail","waterstatistics","CountDown","Button","StartButton","TaskDetailScreen","route","activityName","params","timer","setTimer","time","setTime","weekly_intake","water_count","points","days","sum","average","setInterval","console","log","clearInterval","undefined","map","stats","index","weekly_percentage","data","key","push","id","date","day_percentage","day","oz","toString","substring","startStopTimer","alignItems","margin","alert","backgroundColor","borderWidth","borderColor","color","fontWeight","m","s","styles","dataContainer","marginLeft","flexDirection","text","text4","StyleSheet","create","homeContainer","height","width","loadingBarContainer","marginTop","alignSelf","borderRadius","fontSize","fontFamily","text2","exportText","exportText1","text5"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { StyleSheet, Text, View, Dimensions, Image, TextInput } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LoadingBar from '../components/LoadingBar';\nimport Screen from '../components/Screen';\nimport WaterIntakeDetail from '../components/WaterIntakeDetail';\nimport waterstatistics from '../database/waterstatistics.json';\nimport CountDown from 'react-native-countdown-component';\nimport Button from '../components/Button';\nimport StartButton from '../components/StartButton';\n\nfunction TaskDetailScreen({ route }) {\n\n    const { activityName } = route.params;\n    const [timer, setTimer] = useState(false);\n    const [time, setTime] = useState(0);\n    var weekly_intake = [];\n    var water_count = 0;\n    var points = [];\n    var days = [];\n    var sum = 0;\n    var average = 0;\n\n    useEffect(() => {\n        let timer = setInterval(() => console.log('fire!'), 1000);\n        return () => clearInterval(timer)\n    }, [])\n    if (waterstatistics != undefined) {\n        waterstatistics.map((stats, index) => {\n            stats.weekly_percentage.map((data, key) => {\n                water_count += 1;\n                weekly_intake.push({\n                    id: water_count,\n                    date: data.date,\n                    day_percentage: data.day_percentage,\n                    day: data.day,\n                    oz: data.oz,\n                }\n                );\n\n                days.push(data.date.toString().substring(0, 5));\n                points.push(data.day_percentage);\n                sum += data.day_percentage;\n            })\n        })\n    }\n    const startStopTimer = () => {\n        setTimer(!timer);\n    }\n    return (\n        <Screen>\n\n            <View style={{ alignItems: 'center', margin: 20 }}>\n                <StartButton title=\"Start Timer\" onPress={startStopTimer} isPressed={timer} />\n            </View>\n\n            <CountDown\n                size={30}\n                until={1000}\n                onFinish={() => alert('Finished')}\n                digitStyle={{ backgroundColor: '#FFF', borderWidth: 2, borderColor: '#3B97ED' }}\n                digitTxtStyle={{ color: '#1CC625' }}\n                timeLabelStyle={{ color: 'red', fontWeight: 'bold' }}\n                separatorStyle={{ color: '#1CC625' }}\n                timeToShow={['H', 'M', 'S']}\n                timeLabels={{ m: null, s: null }}\n                showSeparator\n                running={timer}\n                onChange={(time) => {\n                    setTime(time);\n                }}\n            >\n\n            </CountDown>\n\n\n            <ScrollView>\n                <View style={styles.dataContainer}>\n                    <View style={{ marginLeft: 5, flexDirection: 'row', alignItems: 'center' }}>\n                        <View>\n                            <Text style={styles.text}> Time Data </Text>\n                            <Text style={styles.text4}> See your water intake in details </Text>\n                        </View>\n                    </View>\n                    {\n                        weekly_intake.map((data, key) => {\n                            return < WaterIntakeDetail key={key} date={data.date} percentage={data.day_percentage} />\n                        })\n                    }\n                </View>\n\n            </ScrollView>\n\n        </Screen>\n    );\n}\nconst styles = StyleSheet.create({\n    homeContainer: {\n        height: '100%',\n        width: '100%',\n    },\n    loadingBarContainer: {\n        width: '100%',\n        alignItems: 'center',\n    },\n    dataContainer: {\n        marginTop: 10,\n        width: '95%',\n        backgroundColor: 'white',\n        alignSelf: 'center',\n        borderRadius: 20,\n    },\n    text: {\n        fontSize: 20,\n        color: 'black',\n        fontFamily: 'Avenir-Medium'\n    },\n    text2: {\n        fontSize: 20,\n        color: 'white',\n        fontFamily: 'Avenir-Medium'\n    },\n    text4: {\n        fontSize: 14,\n        color: 'gray',\n        fontFamily: 'Avenir-Book'\n    },\n    exportText: {\n        fontSize: 20,\n        color: 'blue',\n        fontFamily: 'Avenir-Medium'\n    },\n    exportText1: {\n        fontSize: 14,\n        color: 'blue',\n        fontFamily: 'Avenir-Medium'\n    },\n    text5: {\n        fontSize: 20,\n        color: 'gray',\n        fontFamily: 'Avenir-Medium'\n    }\n});\n\nexport default TaskDetailScreen;"]},"metadata":{},"sourceType":"module"}