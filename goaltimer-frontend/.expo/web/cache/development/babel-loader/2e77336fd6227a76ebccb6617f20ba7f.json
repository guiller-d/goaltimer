{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/navigations/FeedNavigator.js\";\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DrawerActions } from '@react-navigation/native';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport TasksScreen from \"../screens/TasksScreen\";\nimport TaskDetailScreen from \"../screens/TaskDetailScreen\";\nimport SaveActivityScreen from \"../screens/SaveActivityScreen\";\nimport CreateActivityScreen from \"../screens/CreateActivityScreen\";\nimport ProgressScreen from \"../screens/ProgressScreen\";\nvar Stack = createStackNavigator();\n\nvar DrawerButton = function DrawerButton(props) {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.openDrawer());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      top: '1%',\n      borderRadius: 80\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/images/menu.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }))));\n};\n\nvar FeedNavigator = function FeedNavigator(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HomeScreen\",\n    options: {\n      title: '',\n      headerStyle: {\n        backgroundColor: 'white'\n      },\n      headerShown: false\n    },\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Progress\",\n    options: {\n      headerLeft: function headerLeft() {\n        return React.createElement(DrawerButton, {\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 41\n          }\n        });\n      },\n      title: '',\n      headerStyle: {\n        backgroundColor: 'red'\n      },\n      headerShown: true\n    },\n    component: ProgressScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TaskDetailScreen\",\n    options: {\n      title: 'a',\n      headerStyle: {\n        backgroundColor: '#3B97ED'\n      }\n    },\n    component: TaskDetailScreen,\n    options: {\n      headerShown: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SaveActivityScreen\",\n    options: {\n      headerLeft: null,\n      title: '',\n      headerStyle: {\n        backgroundColor: '#e7305b'\n      }\n    },\n    component: SaveActivityScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateActivityScreen\",\n    component: CreateActivityScreen,\n    options: {\n      title: 'Availability',\n      headerTintColor: 'white',\n      headerStyle: {\n        backgroundColor: '#3B97ED'\n      },\n      headerTitleStyle: {\n        fontFamily: 'Avenir-Medium'\n      },\n      headerLeft: null\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: 28,\n    height: 28,\n    left: '70%',\n    tintColor: 'white'\n  }\n});\nexport default FeedNavigator;","map":{"version":3,"sources":["/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/navigations/FeedNavigator.js"],"names":["React","createStackNavigator","DrawerActions","HomeScreen","TasksScreen","TaskDetailScreen","SaveActivityScreen","CreateActivityScreen","ProgressScreen","Stack","DrawerButton","props","navigation","dispatch","openDrawer","top","borderRadius","styles","image","require","FeedNavigator","title","headerStyle","backgroundColor","headerShown","headerLeft","headerTintColor","headerTitleStyle","fontFamily","StyleSheet","create","width","height","left","tintColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack'\nimport {TouchableOpacity, View, Image, Button,StyleSheet} from 'react-native';\nimport { DrawerActions } from '@react-navigation/native';\nimport HomeScreen from '../screens/HomeScreen';\nimport TasksScreen from '../screens/TasksScreen';\nimport TaskDetailScreen from '../screens/TaskDetailScreen';\nimport SaveActivityScreen from '../screens/SaveActivityScreen';\nimport CreateActivityScreen from '../screens/CreateActivityScreen';\nimport ProgressScreen from '../screens/ProgressScreen';\n\nconst Stack = createStackNavigator();\nconst DrawerButton = (props) => {\n\treturn (\n    <View>\n        <TouchableOpacity onPress={() => props.navigation.dispatch(DrawerActions.openDrawer())}>\n        <View style={{ top: '1%', borderRadius: 80}} >\n           <Image style={styles.image} source={require('../assets/images/menu.png')}/> \n        </View>\n        </TouchableOpacity> \n    </View>\n  );\n};\n\nconst FeedNavigator = ({navigation}) => (\n    <Stack.Navigator >\n        <Stack.Screen name=\"HomeScreen\"         \n            options={{title: '',  headerStyle: {backgroundColor: 'white'}, headerShown: false}} component={HomeScreen} />\n        <Stack.Screen name=\"Progress\" \n            options={{ headerLeft: ()=> <DrawerButton navigation={navigation}  />, title: '', headerStyle: {backgroundColor: 'red'},headerShown: true }} component={ProgressScreen} />\n        <Stack.Screen name=\"TaskDetailScreen\" \n            options={{title: 'a', headerStyle: {backgroundColor: '#3B97ED'}}}  component={TaskDetailScreen} options={{headerShown: true}} />\n        <Stack.Screen name=\"SaveActivityScreen\" \n            options={{  headerLeft:null, title: '', headerStyle: {backgroundColor: '#e7305b'}}}  component={SaveActivityScreen} options={{headerShown: false}} />\n        <Stack.Screen name=\"CreateActivityScreen\" component={CreateActivityScreen} options= { {title: 'Availability',  headerTintColor: 'white', headerStyle: { backgroundColor: '#3B97ED'}, headerTitleStyle: {fontFamily: 'Avenir-Medium', },  headerLeft: null }}/>\n    </Stack.Navigator>\n)\nconst styles = StyleSheet.create({\n    image: {\n        width: 28, \n        height: 28, \n        left: '70%',\n        tintColor: 'white'\n    },\n   \n})\n\nexport default FeedNavigator;"]},"metadata":{},"sourceType":"module"}