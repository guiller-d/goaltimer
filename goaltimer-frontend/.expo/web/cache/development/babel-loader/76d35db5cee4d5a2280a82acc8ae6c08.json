{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/node_modules/react-native-countdown-component/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport _ from 'lodash';\nimport { sprintf } from 'sprintf-js';\nvar DEFAULT_DIGIT_STYLE = {\n  backgroundColor: '#FAB913'\n};\nvar DEFAULT_DIGIT_TXT_STYLE = {\n  color: '#000'\n};\nvar DEFAULT_TIME_LABEL_STYLE = {\n  color: '#000'\n};\nvar DEFAULT_SEPARATOR_STYLE = {\n  color: '#000'\n};\nvar DEFAULT_TIME_TO_SHOW = ['D', 'H', 'M', 'S'];\nvar DEFAULT_TIME_LABELS = {\n  d: 'Days',\n  h: 'Hours',\n  m: 'Minutes',\n  s: 'Seconds'\n};\n\nvar CountDown = function (_React$Component) {\n  _inherits(CountDown, _React$Component);\n\n  var _super = _createSuper(CountDown);\n\n  function CountDown(props) {\n    var _this;\n\n    _classCallCheck(this, CountDown);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      until: Math.max(_this.props.until, 0),\n      lastUntil: null,\n      wentBackgroundAt: null\n    };\n\n    _this._handleAppStateChange = function (currentAppState) {\n      var _this$state = _this.state,\n          until = _this$state.until,\n          wentBackgroundAt = _this$state.wentBackgroundAt;\n\n      if (currentAppState === 'active' && wentBackgroundAt && _this.props.running) {\n        var diff = (Date.now() - wentBackgroundAt) / 1000.0;\n\n        _this.setState({\n          lastUntil: until,\n          until: Math.max(0, until - diff)\n        });\n      }\n\n      if (currentAppState === 'background') {\n        _this.setState({\n          wentBackgroundAt: Date.now()\n        });\n      }\n    };\n\n    _this.getTimeLeft = function () {\n      var until = _this.state.until;\n      return {\n        seconds: until % 60,\n        minutes: parseInt(until / 60, 10) % 60,\n        hours: parseInt(until / (60 * 60), 10) % 24,\n        days: parseInt(until / (60 * 60 * 24), 10)\n      };\n    };\n\n    _this.updateTimer = function () {\n      if (_this.state.lastUntil === _this.state.until || !_this.props.running) {\n        return;\n      }\n\n      if (_this.state.until === 1 || _this.state.until === 0 && _this.state.lastUntil !== 1) {\n        if (_this.props.onFinish) {\n          _this.props.onFinish();\n        }\n\n        if (_this.props.onChange) {\n          _this.props.onChange(_this.state.until);\n        }\n      }\n\n      if (_this.state.until === 0) {\n        _this.setState({\n          lastUntil: 0,\n          until: 0\n        });\n      } else {\n        if (_this.props.onChange) {\n          _this.props.onChange(_this.state.until);\n        }\n\n        _this.setState({\n          lastUntil: _this.state.until,\n          until: Math.max(0, _this.state.until - 1)\n        });\n      }\n    };\n\n    _this.renderDigit = function (d) {\n      var _this$props = _this.props,\n          digitStyle = _this$props.digitStyle,\n          digitTxtStyle = _this$props.digitTxtStyle,\n          size = _this$props.size;\n      return React.createElement(View, {\n        style: [styles.digitCont, {\n          width: size * 2.3,\n          height: size * 2.6\n        }, digitStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.digitTxt, {\n          fontSize: size\n        }, digitTxtStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, d));\n    };\n\n    _this.renderLabel = function (label) {\n      var _this$props2 = _this.props,\n          timeLabelStyle = _this$props2.timeLabelStyle,\n          size = _this$props2.size;\n\n      if (label) {\n        return React.createElement(Text, {\n          style: [styles.timeTxt, {\n            fontSize: size / 1.8\n          }, timeLabelStyle],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }\n        }, label);\n      }\n    };\n\n    _this.renderDoubleDigits = function (label, digits) {\n      return React.createElement(View, {\n        style: styles.doubleDigitCont,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.timeInnerCont,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, _this.renderDigit(digits)), _this.renderLabel(label));\n    };\n\n    _this.renderSeparator = function () {\n      var _this$props3 = _this.props,\n          separatorStyle = _this$props3.separatorStyle,\n          size = _this$props3.size;\n      return React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.separatorTxt, {\n          fontSize: size * 1.2\n        }, separatorStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, ':'));\n    };\n\n    _this.renderCountDown = function () {\n      var _this$props4 = _this.props,\n          timeToShow = _this$props4.timeToShow,\n          timeLabels = _this$props4.timeLabels,\n          showSeparator = _this$props4.showSeparator;\n      var until = _this.state.until;\n\n      var _this$getTimeLeft = _this.getTimeLeft(),\n          days = _this$getTimeLeft.days,\n          hours = _this$getTimeLeft.hours,\n          minutes = _this$getTimeLeft.minutes,\n          seconds = _this$getTimeLeft.seconds;\n\n      var newTime = sprintf('%02d:%02d:%02d:%02d', days, hours, minutes, seconds).split(':');\n      var Component = _this.props.onPress ? TouchableOpacity : View;\n      return React.createElement(Component, {\n        style: styles.timeCont,\n        onPress: _this.props.onPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, timeToShow.includes('D') ? _this.renderDoubleDigits(timeLabels.d, newTime[0]) : null, showSeparator && timeToShow.includes('D') && timeToShow.includes('H') ? _this.renderSeparator() : null, timeToShow.includes('H') ? _this.renderDoubleDigits(timeLabels.h, newTime[1]) : null, showSeparator && timeToShow.includes('H') && timeToShow.includes('M') ? _this.renderSeparator() : null, timeToShow.includes('M') ? _this.renderDoubleDigits(timeLabels.m, newTime[2]) : null, showSeparator && timeToShow.includes('M') && timeToShow.includes('S') ? _this.renderSeparator() : null, timeToShow.includes('S') ? _this.renderDoubleDigits(timeLabels.s, newTime[3]) : null);\n    };\n\n    _this.timer = setInterval(_this.updateTimer, 1000);\n    return _this;\n  }\n\n  _createClass(CountDown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener('change', this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n      AppState.removeEventListener('change', this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.until !== prevProps.until || this.props.id !== prevProps.id) {\n        this.setState({\n          lastUntil: prevState.until,\n          until: Math.max(prevProps.until, 0)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }\n      }, this.renderCountDown());\n    }\n  }]);\n\n  return CountDown;\n}(React.Component);\n\nCountDown.propTypes = {\n  id: PropTypes.string,\n  digitStyle: PropTypes.object,\n  digitTxtStyle: PropTypes.object,\n  timeLabelStyle: PropTypes.object,\n  separatorStyle: PropTypes.object,\n  timeToShow: PropTypes.array,\n  showSeparator: PropTypes.bool,\n  size: PropTypes.number,\n  until: PropTypes.number,\n  onChange: PropTypes.func,\n  onPress: PropTypes.func,\n  onFinish: PropTypes.func\n};\nCountDown.defaultProps = {\n  digitStyle: DEFAULT_DIGIT_STYLE,\n  digitTxtStyle: DEFAULT_DIGIT_TXT_STYLE,\n  timeLabelStyle: DEFAULT_TIME_LABEL_STYLE,\n  timeLabels: DEFAULT_TIME_LABELS,\n  separatorStyle: DEFAULT_SEPARATOR_STYLE,\n  timeToShow: DEFAULT_TIME_TO_SHOW,\n  showSeparator: false,\n  until: 0,\n  size: 15,\n  running: true\n};\nvar styles = StyleSheet.create({\n  timeCont: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  timeTxt: {\n    color: 'white',\n    marginVertical: 2,\n    backgroundColor: 'transparent'\n  },\n  timeInnerCont: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  digitCont: {\n    borderRadius: 5,\n    marginHorizontal: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  doubleDigitCont: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  digitTxt: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontVariant: ['tabular-nums']\n  },\n  separatorTxt: {\n    backgroundColor: 'transparent',\n    fontWeight: 'bold'\n  }\n});\nexport default CountDown;\nexport { CountDown };","map":{"version":3,"sources":["/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/node_modules/react-native-countdown-component/index.js"],"names":["React","PropTypes","_","sprintf","DEFAULT_DIGIT_STYLE","backgroundColor","DEFAULT_DIGIT_TXT_STYLE","color","DEFAULT_TIME_LABEL_STYLE","DEFAULT_SEPARATOR_STYLE","DEFAULT_TIME_TO_SHOW","DEFAULT_TIME_LABELS","d","h","m","s","CountDown","props","state","until","Math","max","lastUntil","wentBackgroundAt","_handleAppStateChange","currentAppState","running","diff","Date","now","setState","getTimeLeft","seconds","minutes","parseInt","hours","days","updateTimer","onFinish","onChange","renderDigit","digitStyle","digitTxtStyle","size","styles","digitCont","width","height","digitTxt","fontSize","renderLabel","label","timeLabelStyle","timeTxt","renderDoubleDigits","digits","doubleDigitCont","timeInnerCont","renderSeparator","separatorStyle","justifyContent","alignItems","separatorTxt","renderCountDown","timeToShow","timeLabels","showSeparator","newTime","split","Component","onPress","TouchableOpacity","View","timeCont","includes","timer","setInterval","AppState","addEventListener","clearInterval","removeEventListener","prevProps","prevState","id","style","propTypes","string","object","array","bool","number","func","defaultProps","StyleSheet","create","flexDirection","marginVertical","borderRadius","marginHorizontal","fontWeight","fontVariant"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  AppState\n} from 'react-native';\nimport _ from 'lodash';\nimport {sprintf} from 'sprintf-js';\n\nconst DEFAULT_DIGIT_STYLE = {backgroundColor: '#FAB913'};\nconst DEFAULT_DIGIT_TXT_STYLE = {color: '#000'};\nconst DEFAULT_TIME_LABEL_STYLE = {color: '#000'};\nconst DEFAULT_SEPARATOR_STYLE = {color: '#000'};\nconst DEFAULT_TIME_TO_SHOW = ['D', 'H', 'M', 'S'];\nconst DEFAULT_TIME_LABELS = {\n  d: 'Days',\n  h: 'Hours',\n  m: 'Minutes',\n  s: 'Seconds',\n};\n\nclass CountDown extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    digitStyle: PropTypes.object,\n    digitTxtStyle: PropTypes.object,\n    timeLabelStyle: PropTypes.object,\n    separatorStyle: PropTypes.object,\n    timeToShow: PropTypes.array,\n    showSeparator: PropTypes.bool,\n    size: PropTypes.number,\n    until: PropTypes.number,\n    onChange: PropTypes.func,\n    onPress: PropTypes.func,\n    onFinish: PropTypes.func,\n  };\n\n  state = {\n    until: Math.max(this.props.until, 0),\n    lastUntil: null,\n    wentBackgroundAt: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.timer = setInterval(this.updateTimer, 1000);\n  }\n\n  componentDidMount() {\n    AppState.addEventListener('change', this._handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    AppState.removeEventListener('change', this._handleAppStateChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.until !== prevProps.until || this.props.id !== prevProps.id) {\n      this.setState({\n        lastUntil: prevState.until,\n        until: Math.max(prevProps.until, 0)\n      });\n    }\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (this.props.until !== nextProps.until || this.props.id !== nextProps.id) {\n  //     this.setState({\n  //       lastUntil: this.state.until,\n  //       until: Math.max(nextProps.until, 0)\n  //     });\n  //   }\n  // }\n\n  _handleAppStateChange = currentAppState => {\n    const {until, wentBackgroundAt} = this.state;\n    if (currentAppState === 'active' && wentBackgroundAt && this.props.running) {\n      const diff = (Date.now() - wentBackgroundAt) / 1000.0;\n      this.setState({\n        lastUntil: until,\n        until: Math.max(0, until - diff)\n      });\n    }\n    if (currentAppState === 'background') {\n      this.setState({wentBackgroundAt: Date.now()});\n    }\n  }\n\n  getTimeLeft = () => {\n    const {until} = this.state;\n    return {\n      seconds: until % 60,\n      minutes: parseInt(until / 60, 10) % 60,\n      hours: parseInt(until / (60 * 60), 10) % 24,\n      days: parseInt(until / (60 * 60 * 24), 10),\n    };\n  };\n\n  updateTimer = () => {\n    // Don't fetch these values here, because their value might be changed\n    // in another thread\n    // const {lastUntil, until} = this.state;\n\n    if (this.state.lastUntil === this.state.until || !this.props.running) {\n      return;\n    }\n    if (this.state.until === 1 || (this.state.until === 0 && this.state.lastUntil !== 1)) {\n      if (this.props.onFinish) {\n        this.props.onFinish();\n      }\n      if (this.props.onChange) {\n        this.props.onChange(this.state.until);\n      }\n    }\n\n    if (this.state.until === 0) {\n      this.setState({lastUntil: 0, until: 0});\n    } else {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.until);\n      }\n      this.setState({\n        lastUntil: this.state.until,\n        until: Math.max(0, this.state.until - 1)\n      });\n    }\n  };\n\n  renderDigit = (d) => {\n    const {digitStyle, digitTxtStyle, size} = this.props;\n    return (\n      <View style={[\n        styles.digitCont,        \n        {width: size * 2.3, height: size * 2.6},\n        digitStyle,\n      ]}>\n        <Text style={[\n          styles.digitTxt,\n          {fontSize: size},\n          digitTxtStyle,\n        ]}>\n          {d}\n        </Text>\n      </View>\n    );\n  };\n\n  renderLabel = label => {\n    const {timeLabelStyle, size} = this.props;\n    if (label) {\n      return (\n        <Text style={[\n          styles.timeTxt,\n          {fontSize: size / 1.8},\n          timeLabelStyle,\n        ]}>\n          {label}\n        </Text>\n      );\n    }\n  };\n\n  renderDoubleDigits = (label, digits) => {\n    return (\n      <View style={styles.doubleDigitCont}>\n        <View style={styles.timeInnerCont}>\n          {this.renderDigit(digits)}\n        </View>\n        {this.renderLabel(label)}\n      </View>\n    );\n  };\n\n  renderSeparator = () => {\n    const {separatorStyle, size} = this.props;\n    return (\n      <View style={{justifyContent: 'center', alignItems: 'center'}}>\n        <Text style={[\n          styles.separatorTxt,\n          {fontSize: size * 1.2},\n          separatorStyle,\n        ]}>\n          {':'}\n        </Text>\n      </View>\n    );\n  };\n\n  renderCountDown = () => {\n    const {timeToShow, timeLabels, showSeparator} = this.props;\n    const {until} = this.state;\n    const {days, hours, minutes, seconds} = this.getTimeLeft();\n    const newTime = sprintf('%02d:%02d:%02d:%02d', days, hours, minutes, seconds).split(':');\n    const Component = this.props.onPress ? TouchableOpacity : View;\n\n    return (\n      <Component\n        style={styles.timeCont}\n        onPress={this.props.onPress}\n      >\n        {timeToShow.includes('D') ? this.renderDoubleDigits(timeLabels.d, newTime[0]) : null}\n        {showSeparator && timeToShow.includes('D') && timeToShow.includes('H') ? this.renderSeparator() : null}\n        {timeToShow.includes('H') ? this.renderDoubleDigits(timeLabels.h, newTime[1]) : null}\n        {showSeparator && timeToShow.includes('H') && timeToShow.includes('M') ? this.renderSeparator() : null}\n        {timeToShow.includes('M') ? this.renderDoubleDigits(timeLabels.m, newTime[2]) : null}\n        {showSeparator && timeToShow.includes('M') && timeToShow.includes('S') ? this.renderSeparator() : null}\n        {timeToShow.includes('S') ? this.renderDoubleDigits(timeLabels.s, newTime[3]) : null}\n      </Component>\n    );\n  };\n\n  render() {\n    return (\n      <View style={this.props.style}>\n        {this.renderCountDown()}\n      </View>\n    );\n  }\n}\n\nCountDown.defaultProps = {\n  digitStyle: DEFAULT_DIGIT_STYLE,\n  digitTxtStyle: DEFAULT_DIGIT_TXT_STYLE,\n  timeLabelStyle: DEFAULT_TIME_LABEL_STYLE,\n  timeLabels: DEFAULT_TIME_LABELS,\n  separatorStyle: DEFAULT_SEPARATOR_STYLE,\n  timeToShow: DEFAULT_TIME_TO_SHOW,\n  showSeparator: false,\n  until: 0,\n  size: 15,\n  running: true,\n};\n\nconst styles = StyleSheet.create({\n  timeCont: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  timeTxt: {\n    color: 'white',\n    marginVertical: 2,\n    backgroundColor: 'transparent',\n  },\n  timeInnerCont: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  digitCont: {\n    borderRadius: 5,\n    marginHorizontal: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  doubleDigitCont: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  digitTxt: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontVariant: ['tabular-nums']\n  },\n  separatorTxt: {\n    backgroundColor: 'transparent',\n    fontWeight: 'bold',\n  },\n});\n\nexport default CountDown;\nexport { CountDown };\n"]},"metadata":{},"sourceType":"module"}