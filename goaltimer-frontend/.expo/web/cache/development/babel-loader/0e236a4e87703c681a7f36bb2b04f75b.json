{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport Screen from \"../components/Screen\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthContext from \"../auth/context\";\nimport api from \"../api/api\";\nimport endpoints from \"../api/endpoints\";\nimport * as yup from 'yup';\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var authContext = useContext(AuthContext);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  {}\n  var loginValidationSchema = yup.object().shape({\n    email: yup.string().email(\"Please enter valid email\").required('Email Address is Required'),\n    password: yup.string().min(5, function (_ref2) {\n      var min = _ref2.min;\n      return \"Password must be at least \" + min + \" characters\";\n    }).required('Password is required')\n  });\n\n  var handleSubmit = function handleSubmit(values) {\n    var apiStr;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiStr = endpoints.login;\n            api.baseURL.post(apiStr, {\n              email: values.email,\n              password: values.password\n            }).then(function (response) {\n              if (response.data != null) {\n                console.log(\"Data: \" + response.data);\n                setUser(response.data);\n                console.log(\"==========Cojson ntext====================\");\n                console.log(response.data);\n              } else {\n                Alert.alert(\"Login Failed\", \"Invalid email or password\", [{\n                  text: \"Cancel\",\n                  onPress: function onPress() {\n                    return console.log(\"Cancel Pressed\");\n                  },\n                  style: \"cancel\"\n                }, {\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.log(\"==========Context====================\");\n    authContext.setUser(user);\n    console.log(authContext.user);\n  });\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      backgroundColor: '#E7ECF4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 35,\n      height: 35,\n      tintColor: 'brown'\n    },\n    source: require(\"../assets/images/clock.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.titleLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Smart \", React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 61\n    }\n  }, \"Tracker\"), \" \"), React.createElement(Text, {\n    style: styles.introLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Own Your Time \")), React.createElement(View, {\n    style: styles.loginBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    validationSchema: loginValidationSchema,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        errors = _ref3.errors,\n        isValid = _ref3.isValid,\n        touched = _ref3.touched;\n    return React.createElement(View, {\n      style: {\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Email\",\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }), errors.email && touched.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 69\n      }\n    }, errors.email), React.createElement(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Password\",\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }), errors.password && touched.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 75\n      }\n    }, errors.password), React.createElement(View, {\n      style: styles.buttonContainer1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, React.createElement(Button, {\n      onPress: handleSubmit,\n      title: \"Sign in\",\n      color: \"#775E5E\",\n      disabled: !isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Don't have account yet?\",\n      onPress: function onPress() {\n        return navigation.navigate('SignUpScreen');\n      },\n      color: \"#85AAE6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }));\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  buttonSection: {\n    flex: 2,\n    justifyContent: 'center',\n    padding: 20,\n    width: '80%'\n  },\n  buttonContainer1: {\n    margin: 20,\n    backgroundColor: '#FFFFFF',\n    color: '#775E5E',\n    padding: 10,\n    marginTop: 35,\n    borderRadius: 20,\n    borderColor: '#B8DEDB',\n    borderWidth: 1,\n    shadowColor: '#0062FF',\n    shadowRadius: 1,\n    shadowOpacity: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  buttonContainer2: {\n    margin: 20,\n    backgroundColor: '#85AAE6',\n    color: '#FFFFFF',\n    padding: 12,\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50,\n    borderBottomLeftRadius: 50,\n    borderBottomRightRadius: 50,\n    borderColor: '#0062FF',\n    borderWidth: 1,\n    shadowColor: '#0062FF',\n    shadowRadius: 5,\n    shadowOpacity: 5,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  introLabel: {\n    fontSize: 24,\n    color: 'gray'\n  },\n  titleLabel: {\n    textAlign: \"left\",\n    margin: 10,\n    fontSize: 25,\n    color: '#4D4F5C'\n  },\n  quote: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontStyle: 'italic',\n    color: '#8C9198'\n  },\n  miniInstruction: {\n    textAlign: \"left\",\n    marginLeft: 25,\n    marginBottom: 10,\n    fontSize: 14,\n    color: '#6E7079'\n  },\n  textInput: {\n    height: 60,\n    margin: 7,\n    padding: 10,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    borderColor: '#A7A7A7',\n    borderWidth: 1,\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    fontSize: 15\n  },\n  loginBlock: {\n    margin: 10,\n    height: 400,\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50,\n    borderBottomLeftRadius: 50,\n    borderBottomRightRadius: 50,\n    padding: 15,\n    backgroundColor: '#FFFFFF',\n    borderColor: '#A7A7A7',\n    borderWidth: 1,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/guillerdalit/Desktop/Workplace/github/goaltimer/goaltimer-frontend/app/screens/LoginScreen.js"],"names":["React","useEffect","useContext","useState","TextInput","Screen","Formik","Form","Field","ErrorMessage","AuthContext","api","endpoints","yup","LoginScreen","navigation","authContext","user","setUser","loginValidationSchema","object","shape","email","string","required","password","min","handleSubmit","values","apiStr","login","baseURL","post","then","response","data","console","log","Alert","alert","text","onPress","style","height","backgroundColor","alignItems","marginTop","width","tintColor","require","styles","titleLabel","color","introLabel","loginBlock","handleChange","handleBlur","errors","isValid","touched","textInput","fontSize","buttonContainer1","navigate","StyleSheet","create","buttonSection","flex","justifyContent","padding","margin","borderRadius","borderColor","borderWidth","shadowColor","shadowRadius","shadowOpacity","shadowOffset","buttonContainer2","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","textAlign","quote","fontStyle","miniInstruction","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, Image } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport Screen from '../components/Screen';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthContext from '../auth/context';\nimport api from '../api/api';\nimport endpoints from '../api/endpoints';\nimport * as yup from 'yup'\n\nfunction LoginScreen({ navigation }) {\n    const authContext = useContext(AuthContext);\n    const [user, setUser] = useState();\n    {/* To validate */ }\n    const loginValidationSchema = yup.object().shape({\n        email: yup\n            .string()\n            .email(\"Please enter valid email\")\n            .required('Email Address is Required'),\n        password: yup\n            .string()\n            .min(5, ({ min }) => `Password must be at least ${min} characters`)\n            .required('Password is required'),\n    })\n    const handleSubmit = async (values) => { \n        //let apiStr = endpoints.login + \"{\" + values.email + \"}/{\" + values.password +\"}\"\n        let apiStr = endpoints.login\n            api.baseURL.post(apiStr, {email: values.email, password: values.password}).then(response => {\n                if(response.data != null){\n                    console.log(\"Data: \" + response.data);\n                    setUser(response.data);\n                    console.log(\"==========Cojson ntext====================\");\n                    console.log(response.data);\n                }\n                else{\n                    Alert.alert(\n                        \"Login Failed\",\n                        \"Invalid email or password\",\n                        [\n                          {\n                            text: \"Cancel\",\n                            onPress: () => console.log(\"Cancel Pressed\"),\n                            style: \"cancel\"\n                          },\n                          { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                        ]\n                      );\n                }\n    \n            }); \n    }\n    useEffect(() => {\n        console.log(\"==========Context====================\");\n        authContext.setUser(user);\n        console.log(authContext.user);\n    });\n    return (\n        <Screen>\n            <View style={{ height: '100%', backgroundColor: '#E7ECF4' }}>\n            <View style={{alignItems: 'center', marginTop: '5%'}}>\n                    <Image style={{width: 35, height: 35, tintColor: 'brown'}} source={require('../assets/images/clock.png')}/>\n                    <Text style = {styles.titleLabel}>Smart <Text style = {{color:'white'}}>Tracker</Text> </Text>\n                    <Text style = {styles.introLabel}>Own Your Time </Text>\n                </View>\n                <View style={styles.loginBlock}>\n                    <Formik\n                        validationSchema={loginValidationSchema}\n                        initialValues={{ email: '', password: '' }}\n                        onSubmit={values => handleSubmit(values)}\n                    >\n                        {({ handleChange, handleBlur, handleSubmit, values, errors, isValid, touched }) => (\n                            <View style={{ marginTop: 10 }}>\n                                {/* For email */}\n                                <TextInput\n                                    style={styles.textInput}\n                                    placeholder='Email'\n                                    onChangeText={handleChange('email')}\n                                    onBlur={handleBlur('email')}\n                                    value={values.email}\n                                    keyboardType=\"email-address\"\n                                />\n                                {(errors.email && touched.email) && <Text style={{ fontSize: 10, color: 'red' }}>{errors.email}</Text>}\n                                {/* For password */}\n                                <TextInput\n                                    style={styles.textInput}\n                                    placeholder='Password'\n                                    onChangeText={handleChange('password')}\n                                    onBlur={handleBlur('password')}\n                                    value={values.password}\n                                    secureTextEntry\n                                />\n                                {(errors.password && touched.password) && <Text style={{ fontSize: 10, color: 'red' }}>{errors.password}</Text>}\n\n                                <View style={styles.buttonContainer1}>\n                                    <Button onPress={handleSubmit} title=\"Sign in\" color='#775E5E' disabled={!isValid} />\n                                </View>\n                                <Button title=\"Don't have account yet?\" onPress={() => navigation.navigate('SignUpScreen')} color='#85AAE6' />\n\n                            </View>\n                        )}\n                    </Formik>\n                </View>\n            </View>\n        </Screen>\n    );\n}\nconst styles = StyleSheet.create({\n    buttonSection: {\n        flex: 2,\n        justifyContent: 'center',\n        padding: 20,\n        width: '80%',\n    },\n    buttonContainer1: {\n        margin: 20,\n        backgroundColor: '#FFFFFF',\n        color: '#775E5E',\n        padding: 10,\n        marginTop: 35,\n        borderRadius: 20,\n        borderColor: '#B8DEDB',\n        borderWidth: 1,\n        shadowColor: '#0062FF',\n        shadowRadius: 1,\n        shadowOpacity: 3,\n        shadowOffset: { width: 0, height: 2 }\n    },\n    buttonContainer2: {\n        margin: 20,\n        backgroundColor: '#85AAE6',\n        color: '#FFFFFF',\n        padding: 12,\n        borderTopLeftRadius: 50,\n        borderTopRightRadius: 50,\n        borderBottomLeftRadius: 50,\n        borderBottomRightRadius: 50,\n        borderColor: '#0062FF',\n        borderWidth: 1,\n        shadowColor: '#0062FF',\n        shadowRadius: 5,\n        shadowOpacity: 5,\n        shadowOffset: { width: 0, height: 2 }\n    },\n    introLabel: {\n        fontSize: 24,\n        color: 'gray'\n    },\n    titleLabel: {\n        textAlign: \"left\",\n        margin: 10,\n        fontSize: 25,\n        color: '#4D4F5C'\n    },\n    quote: {\n        textAlign: \"center\",\n        fontSize: 25,\n        fontStyle: 'italic',\n        color: '#8C9198'\n    },\n    miniInstruction: {\n        textAlign: \"left\",\n        marginLeft: 25,\n        marginBottom: 10,\n        fontSize: 14,\n        color: '#6E7079'\n    },\n    textInput: {\n        height: 60,\n        margin: 7,\n        padding: 10,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        borderColor: '#A7A7A7',\n        borderWidth: 1,\n        shadowOffset: { width: 0, height: 3 },\n        fontSize: 15\n    },\n    loginBlock: {\n        margin: 10,\n        height: 400,\n        borderTopLeftRadius: 50,\n        borderTopRightRadius: 50,\n        borderBottomLeftRadius: 50,\n        borderBottomRightRadius: 50,\n        padding: 15,\n        backgroundColor: '#FFFFFF',\n        borderColor: '#A7A7A7',\n        borderWidth: 1,\n        shadowOffset: { width: 0, height: 2 }\n    },\n});\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}